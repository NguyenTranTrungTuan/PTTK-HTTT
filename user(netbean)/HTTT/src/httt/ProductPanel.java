
package httt;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.border.EmptyBorder;

public class ProductPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductPanel
     */
    public ProductPanel() {
        initComponents();
        setOpaque(false);
        
        init();
    }
    
    private void addItem(int quantity){
        while(quantity>0){
            scrollCotainerPanel1.add(new ProductItem(new Model_ProductItem("ABC","LTG", 5000.0)));
            quantity--;
        }
    }
    
    private void init(){
        scrollCotainerPanel1.setLayout(new WrapLayout(WrapLayout.LEADING, 35, 35));
        ScrollPane.getVerticalScrollBar().setUI(new MyScrollBarUI());
        ScrollPane.getVerticalScrollBar().setPreferredSize(new Dimension(8,0));
        ScrollPane.setBorder(new EmptyBorder(5,5,5,5));
        addItem(12);
        
        scrollCotainerPanel1.revalidate();
        scrollCotainerPanel1.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane = new javax.swing.JScrollPane();
        scrollCotainerPanel1 = new httt.ScrollCotainerPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(740, 540));
        setPreferredSize(new java.awt.Dimension(740, 540));
        setLayout(null);

        ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ScrollPane.setMinimumSize(new java.awt.Dimension(740, 540));
        ScrollPane.setPreferredSize(new java.awt.Dimension(740, 540));

        javax.swing.GroupLayout scrollCotainerPanel1Layout = new javax.swing.GroupLayout(scrollCotainerPanel1);
        scrollCotainerPanel1.setLayout(scrollCotainerPanel1Layout);
        scrollCotainerPanel1Layout.setHorizontalGroup(
            scrollCotainerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 748, Short.MAX_VALUE)
        );
        scrollCotainerPanel1Layout.setVerticalGroup(
            scrollCotainerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        ScrollPane.setViewportView(scrollCotainerPanel1);

        add(ScrollPane);
        ScrollPane.setBounds(0, 0, 750, 540);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintChildren(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        GradientPaint gradient = new GradientPaint(0, 0, Color.decode("#cfdef3"), 0, getHeight(), Color.decode("#e0eafc"));
        g2.setPaint(gradient);
        g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
        super.paintChildren(g);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private httt.ScrollCotainerPanel scrollCotainerPanel1;
    // End of variables declaration//GEN-END:variables
}
